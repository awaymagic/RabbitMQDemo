server.port=8080
#\u914D\u7F6ERabbitMQ\u670D\u52A1\u5668
#spring.rabbitmq.addresses=worker1:5672,worker2:5672,woker3:5672
spring.rabbitmq.addresses=localhost
spring.rabbitmq.username=away
spring.rabbitmq.password=root
spring.rabbitmq.virtual-host=/away

##=== \u914D\u7F6E\u591A\u4E2Abinder
#\u6BD4\u5982\u540D\u79F0\u4E3A demobinder \u7684binder
#spring.cloud.stream.binders.demobinder.type=rabbit
##spring.cloud.stream.binders.demobinder.environment.spring.rabbitmq.addresses=worker1:5672,worker2:5672,worker3:5672
#spring.cloud.stream.binders.demobinder.environment.spring.rabbitmq.host=localhost
#spring.cloud.stream.binders.demobinder.environment.spring.rabbitmq.port=5672
#spring.cloud.stream.binders.demobinder.environment.spring.rabbitmq.username=away
#spring.cloud.stream.binders.demobinder.environment.spring.rabbitmq.password=root
#spring.cloud.stream.binders.demobinder.environment.spring.rabbitmq.virtual-host=/away
#
#
##\u9ED8\u8BA4\u7684binder
#\u5728rabbit\u73AF\u5883\u4E0B\u662F\u53EB\u4EA4\u6362\u673A \u5728kafka\u73AF\u5883\u4E0B\u662Ftopic
#spring.cloud.stream.bindings.output.destination=scstreamExchange
##spring.cloud.stream.bindings.output.binder=demobinder
#
#spring.cloud.stream.bindings.input.destination=scstreamExchange
#spring.cloud.stream.bindings.input.group=stream
#spring.cloud.stream.bindings.input.content-type=text/plain


#================\u4F7F\u7528\u73B0\u6709\u7684\u4EA4\u6362\u673A\u548C\u961F\u5217
# \u4E0D\u5355\u72EC\u521B\u5EFA\u4EA4\u6362\u673A\uFF0C\u4F46\u662F\u4EA4\u6362\u673A\u548C\u961F\u5217\u914D\u7F6E\u8981\u548C\u73B0\u6709\u7684\u4E00\u81F4
spring.cloud.stream.bindings.output.destination=directExchange
#spring.cloud.stream.bindings.output.destination=fanoutExchange
#spring.cloud.stream.rabbit.bindings.output.producer.exchange-type=fanout
spring.cloud.stream.rabbit.bindings.output.producer.exchange-type=direct
spring.cloud.stream.rabbit.bindings.output.producer.exchange-durable=false
spring.cloud.stream.rabbit.bindings.output.producer.bind-queue=false
#\u5728direct\u6A21\u5F0F\u4E0B\uFF0C\u901A\u8FC7\u8BE5\u65B9\u5F0F\u914D\u7F6EroutingKey\uFF0Cheaders \u8868\u793A\u914D\u7F6E\u7684\u662Fheaders,\u76F8\u5F53\u4E8E\u662F\u4E2AMap\uFF0C\u5176\u4E2D key \u4E3A routingKey\uFF0C\u503C\u5728MessageBuilder.withPayload()\u91CC\u8FDB\u884C\u8BBE\u7F6E
spring.cloud.stream.rabbit.bindings.output.producer.routing-key-expression=headers.routingKey

spring.cloud.stream.bindings.input.destination=directExchange
#spring.cloud.stream.bindings.input.destination=fanoutExchange
#spring.cloud.stream.rabbit.bindings.input.producer.exchange-type=fanout
spring.cloud.stream.rabbit.bindings.input.consumer.exchange-type=direct
# \u4F7F\u7528\u73B0\u6709\u914D\u7F6E \u5FC5\u987B\u548C\u5DF2\u6709\u7684\u914D\u7F6E\u4E00\u81F4
spring.cloud.stream.rabbit.bindings.input.consumer.exchange-durable=false
#spring.cloud.stream.bindings.input.group=fanout.q1
spring.cloud.stream.bindings.input.group=direct_queue
# \u8868\u793A\u4F7F\u7528\u670D\u52A1\u5668\u5DF2\u6709\u7684\u914D\u7F6E\uFF08\u4EA4\u6362\u673A\u961F\u5217\uFF09
spring.cloud.stream.rabbit.bindings.input.consumer.bind-queue=false
# true \u8868\u793A queue\u7684\u540D\u5B57\u53EA\u6709group \u4E0D\u5305\u62ECdestination
spring.cloud.stream.rabbit.bindings.input.consumer.queue-name-group-only=true
#\u8868\u793A\u6D88\u8D39\u8005\u8981\u7528\u54EA\u4E2A routingKey
spring.cloud.stream.rabbit.bindings.input.consumer.binding-routing-key=debug
spring.cloud.stream.bindings.input.content-type=text/plain

#spring.cloud.stream.bindings.output.destination=scstreamExchange
##\u6307\u5B9A\u53C2\u4E0E\u6D88\u606F\u5206\u533A\u7684\u6D88\u8D39\u7AEF\u8282\u70B9\u6570\u91CF
#spring.cloud.stream.bindings.output.producer.partition-count=2
##\u53EA\u6709\u6D88\u8D39\u7AEF\u5206\u533AID\u4E3A1\u7684\u6D88\u8D39\u7AEF\u80FD\u63A5\u6536\u5230\u6D88\u606F
#spring.cloud.stream.bindings.output.producer.partition-key-expression=1
##\u65B0\u7248\u672C\u4E2D\u8FD9\u4E2A\u5C5E\u6027\u5DF2\u7ECF\u53D6\u6D88\uFF0C\u6539\u4E3A\u901A\u8FC7\u5206\u533A\u8868\u8FBE\u5F0F\u81EA\u52A8\u5224\u65AD
##spring.cloud.stream.bindings.output.producer.partitioned=true
#
##\u8FD9\u4E2Ainput\u5C31\u5BF9\u5E94Sink.INPUT strem\u4E2D\u9ED8\u8BA4\u7684\u6D88\u8D39\u961F\u5217
#spring.cloud.stream.bindings.input.destination=scstreamExchange
#spring.cloud.stream.bindings.input.group=myinput
##\u542F\u52A8\u6D88\u8D39\u5206\u533A \u65B0\u7248\u672C\u8FD9\u4E2A\u5C5E\u6027\u5DF2\u7ECF\u53D6\u6D88\uFF0C\u6539\u4E3A\u7531\u5206\u533A\u8868\u8FBE\u5F0F\u81EA\u52A8\u5224\u65AD
#spring.cloud.stream.bindings.input.consumer.partitioned=true
##\u53C2\u4E0E\u5206\u533A\u7684\u6D88\u8D39\u7AEF\u8282\u70B9\u4E2A\u6570
#spring.cloud.stream.bindings.input.consumer.instance-count=2
##\u8BBE\u7F6E\u8BE5\u5B9E\u4F8B\u7684\u6D88\u8D39\u7AEF\u5206\u533AID
#spring.cloud.stream.bindings.input.consumer.instance-index=1
#spring.cloud.stream.bindings.input.consumer.concurrency=5
#spring.cloud.stream.bindings.input.consumer.maxAttempts=1
